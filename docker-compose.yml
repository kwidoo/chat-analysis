services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=/api
    depends_on:
      - backend
    networks:
      - analysis-net
    container_name: frontend
    hostname: frontend

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - analysis-net
    container_name: rabbitmq
    hostname: rabbitmq

  dask-scheduler:
    image: ghcr.io/dask/dask:latest
    command: ["dask", "scheduler"]
    networks:
      - analysis-net
    container_name: scheduler
    hostname: scheduler

  dask-worker:
    image: ghcr.io/dask/dask:latest
    command: ["dask", "worker", "tcp://scheduler:8786"]
    environment:
      - DASK_SCHEDULER=tcp://scheduler:8786
    depends_on:
      - dask-scheduler
    networks:
      - analysis-net
    deploy:
      replicas: 2

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000" # Expose for direct access during development if needed
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DASK_SCHEDULER=tcp://scheduler:8786
    depends_on:
      - rabbitmq
      - dask-scheduler
    networks:
      - analysis-net
    container_name: backend
    hostname: backend

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx:/etc/nginx/conf.d
    ports:
      - "881:80" # Map to port 881 as specified in documentation
    depends_on:
      - frontend
      - backend
      - rabbitmq
      - dask-scheduler
    networks:
      - analysis-net
      - nginx_proxy # Add the external nginx_proxy network
    container_name: nginx
    hostname: chat-analysis # Match the hostname to what you set in nginx proxy manager

networks:
  analysis-net:
    driver: bridge
  nginx_proxy:
    external: true # Reference the external network

volumes:
  rabbitmq_data:
    driver: local
