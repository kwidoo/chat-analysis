services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=${VITE_API_URL:-/api} # Changed from REACT_APP_API_URL
    ports:
      - 3000:3000
    depends_on:
      - backend
    networks:
      - analysis-net
      - nginx-proxy_default
    container_name: frontend
    hostname: frontend

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-guest}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - analysis-net
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  dask-scheduler:
    image: ghcr.io/dask/dask:latest
    command: ["dask", "scheduler"]
    ports:
      - "8786"
      - "8787" # Dashboard port
    networks:
      - analysis-net
    container_name: scheduler
    hostname: scheduler

  dask-worker:
    image: ghcr.io/dask/dask:latest
    command: ["dask", "worker", "tcp://scheduler:8786"]
    environment:
      - DASK_SCHEDULER=tcp://scheduler:8786
    depends_on:
      - dask-scheduler
    networks:
      - analysis-net
    deploy:
      replicas: ${DASK_WORKERS:-2}

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - faiss_data:/app/faiss
      - uploads_data:/app/uploads
      # - models_data:/app/models
      - db_data:/app/db # For SQLite persistence
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/
      - RABBITMQ_HOST=rabbitmq
      - DASK_SCHEDULER=tcp://scheduler:8786
      # Database configuration
      - DB_TYPE=${DB_TYPE}
      - DB_PATH=/app/db/auth.db
      - DB_HOST=${DB_HOST:-database}
      - DB_PORT=${DB_PORT:-3306}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - PYTHONPATH=/app
    depends_on:
      - rabbitmq
      - dask-scheduler
    networks:
      - analysis-net
      - nginx-proxy_default
    container_name: backend
    hostname: backend
    ports:
      - "5001:5000"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "881:80" # Never change this port
    depends_on:
      - frontend
      - backend
      - rabbitmq
      - dask-scheduler
    networks:
      - analysis-net
      - nginx-proxy_default
    container_name: chat-analysis
    hostname: chat-analysis

    environment:
      # - VIRTUAL_HOST=${VIRTUAL_HOST:-ai1.home}
      # - VIRTUAL_PORT=80
      - SERVER_NAME=${SERVER_NAME:-ai1.home}

networks:
  analysis-net:
    driver: bridge
  nginx-proxy_default:
    external: true

volumes:
  rabbitmq_data:
    driver: local
  faiss_data:
    driver: local
  uploads_data:
    driver: local
  models_data:
    driver: local
  db_data:
    driver: local
  mysql_data:
    driver: local
  mariadb_data:
    driver: local
